mixin form(it)
  .row
    form.col.s12
      each row in it
        .row
          each field in row.fields
            - size = field.size ? 's' + field.size : 's12'
            - active = (field.placeholder || field.disabled || field.type === 'radio') && (field.type !== 'select')  ? 'active' : ''
            - placeholder = field.placeholder ? field.placeholder : ''
            - value = field.value ? field.value : ''

            if field.type === 'select' && field.browserDefault
              if field.disabled
                select.browser-default(disabled)
                  +select(field.options)
              else
                select.browser-default
                  +select(field.options)

            else
              .input-field.col(class="#{size}")
                if field.icon
                  i(class="mdi-#{field.icon} prefix")

                if field.type === 'textarea'
                  textarea(id="#{field.id}" class="materialize-textarea")

                else if field.type === 'select'
                  if field.disabled
                    select(disabled)
                      +select(field.options)
                  else
                    select
                      +select(field.options)

                else if field.type === 'radio'
                  +radio(field.buttons)

                else if field.type === 'checkbox'
                  +checkbox(field)

                else
                  if field.disabled
                    input.validate(id="#{field.id}" placeholder='#{placeholder}' type='#{field.type}' value='#{value}' disabled)
                  else
                    input.validate(id="#{field.id}" placeholder='#{placeholder}' type='#{field.type}' value='#{value}')

                unless field.type === 'checkbox'
                  label(for='#{field.id}' class="#{active}")= field.label


mixin select(it)
  each option in it
    if option.selected && option.disabled
       option(value='#{option.value}', disabled='', selected='')= option.text
    else if option.selected
      option(value='#{option.value}', selected='')= option.text
    else if option.disabled
      option(value='#{option.value}', disabled='')= option.text
    else
      option(value='#{option.value}')= option.text

mixin radio(it)
  each button in it
    - gap = button.gap ? 'with-gap' : ''
    p
      if button.disabled
        input(id='#{button.id}' class="#{gap}" name='${button.name}', type='radio' disabled='')
      else
        input(id='#{button.id}' class="#{gap}" name='${button.name}', type='radio')
      label(for='#{button.id}')= button.label

mixin checkbox(it)
  - checked = it.checked ? 'checked' : ''
  - filledIn = it.filledIn ? 'filled-in' : ''
  p
    if it.checked && it.disabled
      input(id='#{it.id}' class="#{filledIn}" type='checkbox' checked='checked', disabled='disabled')
    else if it.disabled
      input(id='#{it.id}' class="#{filledIn}" type='checkbox' disabled='disabled')
    else if it.checked
      input(id='#{it.id}' class="#{filledIn}" type='checkbox' checked='checked')
    else
      input(id='#{it.id}' class="#{filledIn}" type='checkbox')
    label(for='#{it.id}')= it.label


if patternLibrary
  // Title: Input Fields
  // Description: Text fields allow user input. The border should light up simply and clearly indicating which field the user is currently editing.
  +form([
    {
      fields: [
        {
          size: 6,
          placeholder: "Placeholder",
          type: "text",
          label: "First Name",
          id: "first_name"
        },
        {
          size: 6,
          type: "text",
          label: "Last Name",
          id: "last_name"
        }
      ]
    },
    {
      fields: [{
        type: "text",
        id: "disabled",
        label: "Disabled",
        disabled: true,
        value: "I am not editable"
      }]
    },
    {
      fields: [{
        type: "password",
        id: "password",
        label: "Password"
      }]
    },
    {
      fields: [{
        type: "email",
        id: "email",
        label: "Email"
      }]
    }
  ])

  // Title: Icon Prefixes
  // Description: You can add an icon prefix to make the form input label even more clear. Just add the <code>icon</code> property with the name of the icon.
  +form([{
    fields: [
      {
        size: 6,
        type: "text",
        label: "First Name",
        id: "first_name",
        icon: "action-account-circle"
      },
      {
        size: 6,
        type: "tel",
        label: "Telephone",
        id: "telephone",
        icon: "communication-phone"
      }
    ]
  }])

  // Title: Textarea
  // Description: <p>Textareas allow larger expandable user input. The border should light up simply and clearly indicating which field the user is currently editing.</p><p><strong>Textareas will auto resize to the text inside.</strong></p>
  +form([{
    fields: [
      {
        type: "textarea",
        label: "Textarea",
        id: "textarea"
      }
    ]
  }])

  // Title: Select
  // showScript: true
  // Description: Select allows user input through specified options.
  +form([{
    fields: [
      {
        size: 6,
        type: "select",
        label: "Select",
        id: "select",
        options: [
          {
            value: '',
            text: "Choose your option",
            disabled: true,
            selected: true
          },
          {
            value: 1,
            text: "Option 1"
          },
          {
            value: 2,
            text: "Option 2"
          },
          {
            value: 3,
            text: "Option 3"
          }
        ]
      }
    ]
  }])

  // Title: Select - Browser Default
  // Description: You can set <code>browserDefault: true</code> to get the browser default.
  +form([{
    fields: [
      {
        size: 6,
        type: "select",
        label: "Select",
        id: "select",
        browserDefault: true,
        options: [
          {
            value: '',
            text: "Choose your option",
            disabled: true,
            selected: true
          },
          {
            value: 1,
            text: "Option 1"
          },
          {
            value: 2,
            text: "Option 2"
          },
          {
            value: 3,
            text: "Option 3"
          }
        ]
      }
    ]
  }])

  // Title: Updating/Destroying Select
  // Description: If you want to update the items inside the select, just rerun the initialization code from above after editing the original select. Or you can destroy the material select with this function below, and create a new select altogether.
  pre
    code.language-javascript
      $('select').material_select('destroy');

  // Title: Radio Buttons
  // Description: Radio Buttons are used when the user must make only one selection out of a group of items.
  +form([{
    fields: [
      {
        type: "radio",
        label: "radio",
        id: "radio",
        buttons: [
          {
            id: "test1",
            name: "group1",
            label: "Red"
          },
          {
            id: "test2",
            name: "group1",
            label: "Yellow"
          },
          {
            id: "test3",
            name: "group1",
            label: "Green",
            gap: true
          },
          {
            id: "test4",
            name: "group1",
            label: "Brown",
            disabled: true
          }
        ]
      }
    ]
  }])

  // Title: Checkboxes
  +form([
    {
      fields: [
        {
          type: "checkbox",
          label: "Red",
          id: "test5"
        },
        {
          type: "checkbox",
          label: "Yellow",
          id: "test6",
          checked: true
        },
        {
          type: "checkbox",
          label: "Filled In",
          id: "filled-in-box",
          filledIn: true
        },
        {
          type: "checkbox",
          label: "Green",
          id: "test7",
          checked: true,
          disabled: true
        },
        {
          type: "checkbox",
          label: "Green",
          id: "test8",
          disabled: true
        }
      ]
    }
  ])

















